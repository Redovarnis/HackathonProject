// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Corporate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CorporateName");

                    b.Property<DateTime>("EndOrderTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndOrderTime");

                    b.Property<bool>("OrderState")
                        .HasColumnType("bit")
                        .HasColumnName("OrderState");

                    b.Property<DateTime>("StartOrderTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartOrderTime");

                    b.HasKey("Id");

                    b.ToTable("Corporates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorporateName = "Getir",
                            EndOrderTime = new DateTime(2022, 12, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderState = true,
                            StartOrderTime = new DateTime(2022, 12, 17, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CorporateName = "YemekSepeti",
                            EndOrderTime = new DateTime(2022, 12, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            OrderState = true,
                            StartOrderTime = new DateTime(2022, 12, 17, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CorporateName = "Trendyol",
                            EndOrderTime = new DateTime(2022, 12, 17, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderState = true,
                            StartOrderTime = new DateTime(2022, 12, 17, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
